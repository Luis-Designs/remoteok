{"mappings":"AAAA,MAAMA,eAAiBC,SAASC,eAAe,aACzCC,kBAAoBF,SAASC,eAAe,qBAC5CE,YAAcH,SAASI,cAC3B,sBAGF,IAAIC,gBAAiB,EACjBC,iBAAmBP,eAAeQ,YAEtC,MAAMC,yBAA4BC,IAC5BJ,gBACFI,EAAMC,OACND,EAAMF,YAAcD,iBACpBD,gBAAiB,IAEjBI,EAAME,QACNF,EAAMF,YAAc,UACpBF,gBAAiB,EACnB,EAGFN,gBAAgBa,iBAAiB,SAAS,KACxCT,YAAYU,UAAUC,OAAO,QAC7BN,yBAAyBT,gBACzBgB,uBACAC,yBAAA,IAGFd,mBAAmBU,iBAAiB,SAAS,KAC3CT,aAAaU,UAAUC,OAAO,QAC9BN,yBAAyBT,eAAA,IAI3B,MAAMkB,oBAAsB,KAC1B,MAAMC,EAAanB,eAAeoB,MAAMC,cAClCC,EAAWlB,YAAYmB,qBAAqB,MAClD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CAC3BF,EAASE,GAAGE,GAAGL,cACnBM,SAASR,GAChBG,EAASE,GAAGI,MAAMC,QAAU,QAE5BP,EAASE,GAAGI,MAAMC,QAAU,MAEhC,GAIF,SAASC,SAASC,EAAcC,GAC9B,IAAIC,EAAW,EACf,OAAO,YAAaC,GAClB,MAAMC,GAAM,IAAIC,MAAOC,UACnBF,EAAMF,EAAWD,IAGrBC,EAAWE,EACXJ,KAAMG,GACR,CACF,CAGA,SAASI,SAASP,EAAcC,GAC9B,IAAIO,EACJ,OAAO,YAAaL,GAClBM,aAAaD,GACbA,EAAQE,YAAW,KACjBV,KAAMG,EAAA,GACLF,EACL,CACF,CAEAhC,eAAea,iBACb,QACAyB,SAASR,SAASZ,oBAAqB,KAAM,MAI/C,MAAMwB,qBAAuBzC,SAASI,cACpC,2BAGIsC,qBAAuBC,MAAMC,KACjCH,qBAAqBI,iBAAiB,WAGlC9B,qBAAuB,KAC3B2B,qBAAqBI,KAAI,CAACC,EAAQxB,KAChCwB,EAAOlC,UAAUmC,OAAO,gCACxBD,EAAOE,aAAa,WAAY,IAE5BF,EAAOtB,GAAGL,gBAAkBrB,eAAeoB,MAAMC,gBACnD2B,EAAOlC,UAAUqC,IAAI,gCACrBH,EAAOI,gBAAgB,YACzB,GACF,EAIIC,oBAAsBpD,SAASI,cACnC,0BAGIiD,eAAiBV,MAAMC,KAC3BQ,oBAAoBP,iBAAiB,6BAGjC7B,wBAA0B,KACa,KAAvCjB,eAAeoB,MAAMC,eAIzBiC,eAAeP,KAAKQ,IAClBA,EAAczC,UAAUC,OAAO,UAC/B,MAAMyC,EAAUD,EAAcE,SAAS,GAAGA,SAC1C,IAAK,IAAIjC,EAAI,EAAGA,EAAIgC,EAAQ/B,OAAQD,IAC9BgC,EAAQhC,GAAGE,GAAGC,SAAS3B,eAAeoB,MAAMC,gBAC9CkC,EAAczC,UAAUC,OAAO,YAGrC,EAGI2C,uBAAyBzD,SAASI,cACtC,6BAGFqD,uBAAuBD,SAAS,GAAG5C,iBAAiB,SAAS,KAC3D6C,uBAAuB5C,UAAUC,OAAO,aAG1CuC,eAAeP,KAAKQ,IAClB,MAAOP,GAAUO,EAAcE,SAAS,GAAGA,SAC3CT,EAAOnC,iBAAiB,SAAS,KAC/BmC,EAAOlC,UAAUC,OAAO,oBACxBwC,EAAcI,oBAAoB7C,UAAUC,OAAO,YACrD","sources":["src/assets/ts/main.ts"],"sourcesContent":["const inputSearchJob = document.getElementById('searchJob') as HTMLInputElement;\nconst searchJobDropIcon = document.getElementById('searchJobDropIcon');\nconst ulSearchJob = document.querySelector(\n  'ul[id=\"searchJob\"]'\n) as HTMLUListElement;\n\nlet isInputFocused = false;\nlet inputPlaceholder = inputSearchJob.placeholder;\n\nconst _handleFocusInputElement = (input: HTMLInputElement) => {\n  if (isInputFocused) {\n    input.blur();\n    input.placeholder = inputPlaceholder;\n    isInputFocused = false;\n  } else {\n    input.focus();\n    input.placeholder = 'Type...';\n    isInputFocused = true;\n  }\n};\n\ninputSearchJob?.addEventListener('click', () => {\n  ulSearchJob.classList.toggle('open');\n  _handleFocusInputElement(inputSearchJob);\n  _handleEnabledButton();\n  _handleHiddenJobPosting();\n});\n\nsearchJobDropIcon?.addEventListener('click', () => {\n  ulSearchJob?.classList.toggle('open');\n  _handleFocusInputElement(inputSearchJob);\n});\n\n// Función para filtrar los elementos de la lista\nconst filterListSearchJob = () => {\n  const searchText = inputSearchJob.value.toLowerCase();\n  const elements = ulSearchJob.getElementsByTagName('li');\n  for (let i = 0; i < elements.length; i++) {\n    const text = elements[i].id.toLowerCase();\n    if (text.includes(searchText)) {\n      elements[i].style.display = 'block';\n    } else {\n      elements[i].style.display = 'none';\n    }\n  }\n};\n\n// Función de \"throttle\" para limitar la tasa de llamadas mientras el usuario escribe\nfunction throttle(fn: Function, delay: number) {\n  let lastCall = 0;\n  return function (...args: any[]) {\n    const now = new Date().getTime();\n    if (now - lastCall < delay) {\n      return;\n    }\n    lastCall = now;\n    fn(...args);\n  };\n}\n\n// Función de \"debounce\" para limitar las llamadas a la función a una sola vez después de un retraso\nfunction debounce(fn: Function, delay: number) {\n  let timer: number;\n  return function (...args: any[]) {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n\ninputSearchJob.addEventListener(\n  'input',\n  debounce(throttle(filterListSearchJob, 300), 500)\n);\n\n/* ENABLED BUTTON */\nconst sortingFiltersSearch = document.querySelector(\n  '.sorting-filters-search'\n) as HTMLElement;\n\nconst buttonsFiltersSearch = Array.from(\n  sortingFiltersSearch.querySelectorAll('button')\n) as HTMLButtonElement[];\n\nconst _handleEnabledButton = () => {\n  buttonsFiltersSearch.map((button, i) => {\n    button.classList.remove('sorting-filters-search--show');\n    button.setAttribute('disabled', '');\n\n    if (button.id.toLowerCase() === inputSearchJob.value.toLowerCase()) {\n      button.classList.add('sorting-filters-search--show');\n      button.removeAttribute('disabled');\n    }\n  });\n};\n\n/* FILTER ACTIVE */\nconst jobPostingContainer = document.querySelector(\n  '.job-posting-container'\n) as HTMLElement;\n\nconst divsJobPosting = Array.from(\n  jobPostingContainer.querySelectorAll('div[class=\"job-posting\"]')\n) as HTMLDivElement[];\n\nconst _handleHiddenJobPosting = () => {\n  if (inputSearchJob.value.toLowerCase() === '') {\n    return;\n  }\n\n  divsJobPosting.map((divJobPosting) => {\n    divJobPosting.classList.toggle('hidden');\n    const buttons = divJobPosting.children[2].children;\n    for (let i = 0; i < buttons.length; i++) {\n      if (buttons[i].id.includes(inputSearchJob.value.toLowerCase())) {\n        divJobPosting.classList.toggle('hidden');\n      }\n    }\n  });\n};\n\nconst remoteJobAdvertisement = document.querySelector(\n  '.remote-job-advertisement'\n) as HTMLDivElement;\n\nremoteJobAdvertisement.children[2].addEventListener('click', () => {\n  remoteJobAdvertisement.classList.toggle('hidden');\n});\n\ndivsJobPosting.map((divJobPosting) => {\n  const [button] = divJobPosting.children[4].children;\n  button.addEventListener('click', () => {\n    button.classList.toggle('btn-active-apply');\n    divJobPosting.nextElementSibling?.classList.toggle('hidden');\n  });\n});\n"],"names":["inputSearchJob","document","getElementById","searchJobDropIcon","ulSearchJob","querySelector","isInputFocused","inputPlaceholder","placeholder","_handleFocusInputElement","input","blur","focus","addEventListener","classList","toggle","_handleEnabledButton","_handleHiddenJobPosting","filterListSearchJob","searchText","value","toLowerCase","elements","getElementsByTagName","i","length","id","includes","style","display","throttle","fn","delay","lastCall","args","now","Date","getTime","debounce","timer","clearTimeout","setTimeout","sortingFiltersSearch","buttonsFiltersSearch","Array","from","querySelectorAll","map","button","remove","setAttribute","add","removeAttribute","jobPostingContainer","divsJobPosting","divJobPosting","buttons","children","remoteJobAdvertisement","nextElementSibling"],"version":3,"file":"index.e7045b11.js.map"}